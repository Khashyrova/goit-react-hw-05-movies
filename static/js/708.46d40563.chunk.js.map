{"version":3,"file":"static/js/708.46d40563.chunk.js","mappings":"mOACA,GAAgB,KAAO,+BAA+B,MAAQ,gCAAgC,OAAS,iCAAiC,MAAQ,gCAAgC,KAAO,gC,SC6FvL,EAxFyB,WACvB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAUR,OARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GACLI,KAAKL,GACLM,OAAM,SAAUC,GACfC,QAAQC,IAAI,UAAYF,EACzB,GACJ,GAAE,CAACN,KAGF,8BACGF,IACC,iCACE,iBAAKW,UAAWC,EAAAA,KAAhB,WACE,0BACGZ,EAASa,MADZ,KACqBb,EAASc,aAAaC,MAAM,EAAG,GADpD,QAGA,uBACGC,KAAKC,MAAiD,KAA1CjB,EAASkB,aAAeC,OAAOC,UAAkB,MAGtC,OAAzBpB,EAASqB,aACR,gBACEV,UAAWC,EAAAA,cACXU,IAAI,GACJC,IAAKvB,EAASa,SAGhB,gBACEF,UAAWC,EAAAA,cACXU,IAAG,yCAAoCtB,EAASqB,aAChDE,IAAKvB,EAASa,YAKpB,iBAAKF,UAAWC,EAAAA,MAAhB,WACE,uCACA,uBAAIZ,EAASwB,YACb,qCACA,eAAIb,UAAWC,EAAAA,OAAf,SACGZ,EAASyB,OAAOC,KAAI,SAAAC,GAAK,OACxB,wBAAoBA,EAAMC,MAAjBD,EAAMzB,GADS,OAK5B,iBAAKS,UAAWC,EAAAA,MAAhB,WACE,SAAC,KAAD,CACEiB,MAAO,qBAAGC,SAEJ,CACEC,gBAAiB,WAEnB,CAAEA,gBAAiB,UALlB,EAOPC,GAAE,kBAAa9B,EAAb,YACFS,UAAWC,EAAAA,KACXqB,MAAOpC,EAASoC,MAVlB,sBAcA,SAAC,KAAD,CACEJ,MAAO,qBAAGC,SAEJ,CACEC,gBAAiB,WAEnB,CAAEA,gBAAiB,UALlB,EAOPC,GAAE,kBAAa9B,EAAb,SACFS,UAAWC,EAAAA,KACXqB,MAAOpC,EAASoC,MAVlB,sBAeF,SAAC,KAAD,WAMX,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/movieDetails/MovieDetailsList/MovieDetailsList.module.css?08fd","pages/movieDetails/MovieDetailsList/MovieDetailsList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"left\":\"MovieDetailsList_left__ABYSG\",\"right\":\"MovieDetailsList_right__pADX8\",\"genres\":\"MovieDetailsList_genres__dfKpv\",\"links\":\"MovieDetailsList_links__mBRjd\",\"link\":\"MovieDetailsList_link__JlDFi\"};","import React, { useState, useEffect } from 'react';\nimport { useParams, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { getById } from '../../../components/FetchApi';\n\nimport styles from './MovieDetailsList.module.css';\n\nconst MovieDetailsList = () => {\n  const location = useLocation();\n  const [moviesId, setIdInfo] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getById(id)\n      .then(setIdInfo)\n      .catch(function (error) {\n        console.log('Error: ' + error);\n      });\n  }, [id]);\n\n  return (\n    <>\n      {moviesId && (\n        <>\n          <div className={styles.left}>\n            <h2>\n              {moviesId.title} ({moviesId.release_date.slice(0, 4)})\n            </h2>\n            <p>\n              {Math.round((moviesId.vote_average + Number.EPSILON) * 100) / 100}\n            </p>\n\n            {moviesId.poster_path === null ? (\n              <img\n                className={styles.listItemImage}\n                src=\"\"\n                alt={moviesId.title}\n              />\n            ) : (\n              <img\n                className={styles.listItemImage}\n                src={`https://image.tmdb.org/t/p/w500${moviesId.poster_path}`}\n                alt={moviesId.title}\n              />\n            )}\n          </div>\n\n          <div className={styles.right}>\n            <h3>Overview:</h3>\n            <p>{moviesId.overview}</p>\n            <h3>Genres:</h3>\n            <ul className={styles.genres}>\n              {moviesId.genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n\n            <div className={styles.links}>\n              <NavLink\n                style={({ isActive }) =>\n                  isActive\n                    ? {\n                        backgroundColor: '#daa520',\n                      }\n                    : { backgroundColor: '#808080' }\n                }\n                to={`/movies/${id}/reviews`}\n                className={styles.link}\n                state={location.state}\n              >\n                Reviews\n              </NavLink>\n              <NavLink\n                style={({ isActive }) =>\n                  isActive\n                    ? {\n                        backgroundColor: '#daa520',\n                      }\n                    : { backgroundColor: '#808080' }\n                }\n                to={`/movies/${id}/cast`}\n                className={styles.link}\n                state={location.state}\n              >\n                Cast\n              </NavLink>\n            </div>\n            <Outlet />\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsList;\n"],"names":["location","useLocation","useState","moviesId","setIdInfo","id","useParams","useEffect","getById","then","catch","error","console","log","className","styles","title","release_date","slice","Math","round","vote_average","Number","EPSILON","poster_path","src","alt","overview","genres","map","genre","name","style","isActive","backgroundColor","to","state"],"sourceRoot":""}